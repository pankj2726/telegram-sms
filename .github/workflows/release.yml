# .github/workflows/release.yml
# Configured at 2:00 PM UTC, October 26, 2023 - Workflow for building and releasing Android APK
# Corrected at 3:30 PM UTC, October 26, 2023 - Fixed sdkmanager path and NDK installation

name: Build and Release APK

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0

jobs:
  build-and-release:
    name: Build, Sign, and Release
    runs-on: ubuntu-latest

    permissions:
      contents: write # Required to create releases and upload release assets
      packages: write # Required to publish to GitHub Packages (or upload artifacts)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # Ensure this matches project requirements

      - name: Set up Android SDK and Command Line Tools
        uses: android-actions/setup-android@v3
        # This action sets ANDROID_SDK_ROOT and should add sdkmanager to PATH.
        # It typically installs cmdline-tools;latest by default.

      - name: Accept Android SDK licenses and Install NDK 21.0.6113669
        run: |
          echo "Accepting Android SDK licenses..."
          # Ensure cmdline-tools are available and sdkmanager is in PATH or use full path
          # The android-actions/setup-android action should put the correct tools in PATH.
          # If not, use $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager
          # Defaulting to direct call assuming PATH is set up by previous step.
          yes | sdkmanager --licenses || echo "Failed to accept licenses, or no new licenses to accept. Continuing..."
          
          echo "Installing NDK version 21.0.6113669..."
          sdkmanager "ndk;21.0.6113669" || {
            echo "Failed to install NDK 21.0.6113669 using default sdkmanager path."
            echo "Attempting with full path: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
            # Re-accept licenses just in case context changed or it's needed before this specific sdkmanager call
            yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || echo "Failed to accept licenses (fallback attempt). Continuing..."
            $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "ndk;21.0.6113669"
          }
          echo "NDK installation step completed."
        env:
          # ANDROID_SDK_ROOT is automatically set by android-actions/setup-android
          PATH: ${{ env.PATH }}:${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${{ env.ANDROID_SDK_ROOT }}/platform-tools

      - name: Decode Keystore
        env:
          SIGNING_KEYSTORE_BASE64: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
        run: |
          echo "Decoding keystore..."
          echo $SIGNING_KEYSTORE_BASE64 | base64 --decode > ${{ github.workspace }}/app/test-telegram-sms.jks
          echo "Keystore decoded successfully at ${{ github.workspace }}/app/test-telegram-sms.jks"

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build and Sign Release APK
        env:
          SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_KEYSTORE_FILE_PATH: ${{ github.workspace }}/app/test-telegram-sms.jks
        run: |
          echo "Starting Gradle build..."
          ./gradlew :app:assembleRelease

      - name: Get Tag Name
        id: get_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          release_name: Release ${{ steps.get_tag.outputs.tag_name }}
          body: |
            Release of version ${{ steps.get_tag.outputs.tag_name }}
            Signed app-release.apk attached.
            This APK was built using a test signing key and includes the 16-digit secret key prompt for Device Admin.
            NDK version used: 21.0.6113669.
          draft: false
          prerelease: false

      - name: Upload Release APK to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: app-release-${{ steps.get_tag.outputs.tag_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Publish APK as Action Artifact (for GitHub Packages alternative)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.get_tag.outputs.tag_name }}
          path: ./app/build/outputs/apk/release/app-release.apk

# Instructions for user (to be added to tutorial):
# (These remain largely the same - ensure secrets are set up)
# 1. Create GitHub Secrets in your repository settings:
#    - SIGNING_KEYSTORE_BASE64, SIGNING_KEYSTORE_PASSWORD, SIGNING_KEY_ALIAS, SIGNING_KEY_PASSWORD.
# 2. Ensure your app/build.gradle is configured to read these from environment variables.
# 3. Push a tag like 'v1.0.0' to trigger this workflow.
